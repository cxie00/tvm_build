# FROM ubuntu:20.04
FROM mcr.microsoft.com/azureml/openmpi4.1.0-cuda11.3-cudnn8-ubuntu20.04

RUN apt-get update && apt-get install -y git 

WORKDIR workspace
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get install -y python3 python3-dev python3-setuptools gcc libtinfo-dev zlib1g-dev build-essential cmake libedit-dev libxml2-dev
RUN apt install python3-pip -y

RUN git clone https://github.com/apache/tvm.git
WORKDIR /workspace/tvm/
RUN pwd
RUN git checkout tags/v0.8.0
RUN git submodule update --recursive --init

RUN mkdir build

WORKDIR /workspace/tvm/
RUN apt-get install wget
RUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
RUN tar -xf clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz && mv clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04 llvm

RUN cp cmake/config.cmake build
COPY config.cmake /workspace/tvm/build/

WORKDIR /workspace/tvm/build
RUN cmake ..
RUN make -j4

ENV TVM_HOME=../
ENV PYTHONPATH=$TVM_HOME/python:../python

RUN pip3 install --user numpy decorator attrs

WORKDIR /workspace/tvm/
RUN mkdir test
COPY from_onnx.py /workspace/tvm/test/

ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.3/compat/

RUN pip3 install onnx pillow matplotlib scipy
RUN apt-get install vim -y

RUN pip3 install hummingbird-ml onnxruntime==1.9.0 mlflow sklearn
COPY mlruns /workspace/tvm/test/
COPY tvm_onnx.py /workspace/tvm/test/